{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","diff","setdiff","win","setwin","myArray","setMyArray","myArray2","setMyArray2","teama","setteama","teamb","setteamb","a_score","b_score","className","Row","Col","align","onClick","a","prompt","class","type","placeholder","id","Button","variant","size","document","getElementById","value","push","parseInt","i","length","alert","map","item","index","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.63612dd2.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport './App.css';\nimport './style.css';\n\nfunction App() {\n  const [diff, setdiff] = useState(0)\n  const [win, setwin] = useState(\"No_One\")\n\n  const [myArray, setMyArray] = useState([])\n  const [myArray2, setMyArray2] = useState([])\n  const [teama, setteama] = useState(\"Team A\")\n  const [teamb, setteamb] = useState(\"Team B\")\n\n  var a_score =0\n  var b_score =0\n\n  const add = () =>{\n    if (document.getElementById(\"inputA\").value === \"\" || document.getElementById(\"inputB\").value === \"\"){\n      alert(\"What is this Sagar ? Are you dumb ? Add Values for both Team A and Team B. You CheAteR !!\")\n      return\n    }\n    var a = myArray\n    a.push(parseInt(document.getElementById(\"inputA\").value))\n    setMyArray(a)\n\n    var a = myArray2\n    a.push(parseInt(document.getElementById(\"inputB\").value))\n    setMyArray2(a)\n\n    for(var i=0 ; i<myArray.length;i++){\n      a_score += myArray[i]\n    }\n    \n    for(var i=0 ; i<myArray2.length;i++){\n      b_score += myArray2[i]\n    }\n\n    if (a_score > b_score) {\n      setdiff(a_score - b_score)\n      setwin(teama)\n    } else {\n      setdiff(b_score - a_score)\n      setwin(teamb)\n    }\n\n    document.getElementById(\"inputB\").value=\"\"\n    document.getElementById(\"inputA\").value=\"\"\n\n  }\n\n  const clickA =()=>{\n    var a = prompt(\"What would you like to rename Team A , Sagar ?\")\n    if (a != \"\"){ setteama(a)}\n   \n  }\n  const clickB =()=>{\n    var a = prompt(\"What would you like to rename Team B , Sagar ?\")\n    if (a != \"\"){ setteamb(a)}\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Row className=\"heading\">\n        <Col align=\"center\"><h1 className=\"heading\" onClick={clickA}>{teama}</h1></Col>\n        <Col align=\"center\"><h1 className=\"heading\" onClick={clickB}>{teamb}</h1></Col>\n      </Row><div className=\"restapp\">\n      <Row><br></br></Row>\n      <Row>\n        <Col><div class=\"ui input\"><input type=\"number\" placeholder=\"Team A Round Score\" id=\"inputA\"/></div></Col>\n        <Col><div class=\"ui input\"><input type=\"number\" placeholder=\"Team B Round Score\" id=\"inputB\"/></div></Col>\n      </Row>\n      <Row><br></br></Row>\n      <Row>\n      <Button variant=\"secondary\" size=\"lg\" onClick={add}>Add Round Result</Button>\n      </Row>\n      <Row>\n        <Col align=\"center\">\n                      <ol>\n              {myArray.map((item,index) => \n                  <li key={index}>{item}</li>\n              )}\n              </ol>\n        </Col>\n        <Col align=\"center\">\n                        <ol>\n                {myArray2.map((item,index) => \n                    <li key={index}>{item}</li>\n                )}\n                </ol>\n        </Col>\n      </Row>\n      <Row>\n      <Alert variant=\"secondary\"><b>{win}</b> is winning by <b>{diff}</b></Alert>\n      </Row>\n    </div></div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}