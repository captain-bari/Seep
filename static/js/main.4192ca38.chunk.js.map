{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","diff","setdiff","win","setwin","myArray","setMyArray","myArray2","setMyArray2","a_score","b_score","className","Row","Col","align","class","type","placeholder","id","Button","variant","size","onClick","document","getElementById","value","a","push","parseInt","i","length","alert","map","item","index","Alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yQA0FeA,MAlFf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,UAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAEA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEIC,EAAS,EACTC,EAAS,EAoCb,OACE,sBAAKC,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,CAAKD,UAAU,UAAf,UACE,cAACE,EAAA,EAAD,CAAKC,MAAM,SAAX,SAAoB,oBAAIH,UAAU,UAAd,sBACpB,cAACE,EAAA,EAAD,CAAKC,MAAM,SAAX,SAAoB,oBAAIH,UAAU,UAAd,yBAChB,sBAAKA,UAAU,UAAf,UACN,cAACC,EAAA,EAAD,UAAK,yBACL,eAACA,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAK,qBAAKE,MAAM,WAAX,SAAsB,uBAAOC,KAAK,SAASC,YAAY,cAAcC,GAAG,eAC7E,cAACL,EAAA,EAAD,UAAK,qBAAKE,MAAM,WAAX,SAAsB,uBAAOC,KAAK,SAASC,YAAY,cAAcC,GAAG,kBAE/E,cAACN,EAAA,EAAD,UAAK,yBACL,cAACA,EAAA,EAAD,UACA,cAACO,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,KAAKC,QA/C9B,WACV,GAAgD,KAA5CC,SAASC,eAAe,UAAUC,OAA4D,KAA5CF,SAASC,eAAe,UAAUC,MAAxF,CAIA,IAIIC,GAJAA,EAAIrB,GACNsB,KAAKC,SAASL,SAASC,eAAe,UAAUC,QAClDnB,EAAWoB,IAEPA,EAAInB,GACNoB,KAAKC,SAASL,SAASC,eAAe,UAAUC,QAClDjB,EAAYkB,GAEZ,IAAI,IAAIG,EAAE,EAAIA,EAAExB,EAAQyB,OAAOD,IAC7BpB,GAAWJ,EAAQwB,GAGrB,IAAQA,EAAE,EAAIA,EAAEtB,EAASuB,OAAOD,IAC9BnB,GAAWH,EAASsB,GAGlBpB,EAAUC,GACZR,EAAQO,EAAUC,GAClBN,EAAO,YAEPF,EAAQQ,EAAUD,GAClBL,EAAO,WAGTmB,SAASC,eAAe,UAAUC,MAAM,GACxCF,SAASC,eAAe,UAAUC,MAAM,QA5BtCM,MAAM,+DA6CN,gCAEA,eAACnB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,MAAM,SAAX,SACc,6BACPT,EAAQ2B,KAAI,SAACC,EAAKC,GAAN,OACT,6BAAiBD,GAARC,UAInB,cAACrB,EAAA,EAAD,CAAKC,MAAM,SAAX,SACgB,6BACPP,EAASyB,KAAI,SAACC,EAAKC,GAAN,OACV,6BAAiBD,GAARC,aAKvB,cAACtB,EAAA,EAAD,UACA,eAACuB,EAAA,EAAD,CAAOf,QAAQ,YAAf,UAA2B,4BAAIjB,IAA/B,kBAAsD,4BAAIF,gBCxEjDmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.4192ca38.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport './App.css';\nimport './style.css';\n\nfunction App() {\n  const [diff, setdiff] = useState(0)\n  const [win, setwin] = useState(\"No_One\")\n\n  const [myArray, setMyArray] = useState([])\n  const [myArray2, setMyArray2] = useState([])\n\n  var a_score =0\n  var b_score =0\n\n  const add = () =>{\n    if (document.getElementById(\"inputA\").value === \"\" || document.getElementById(\"inputB\").value === \"\"){\n      alert(\"Make sure You have added Values for both Team A and Team B\")\n      return\n    }\n    var a = myArray\n    a.push(parseInt(document.getElementById(\"inputA\").value))\n    setMyArray(a)\n\n    var a = myArray2\n    a.push(parseInt(document.getElementById(\"inputB\").value))\n    setMyArray2(a)\n\n    for(var i=0 ; i<myArray.length;i++){\n      a_score += myArray[i]\n    }\n    \n    for(var i=0 ; i<myArray2.length;i++){\n      b_score += myArray2[i]\n    }\n\n    if (a_score > b_score) {\n      setdiff(a_score - b_score)\n      setwin(\"Team A\")\n    } else {\n      setdiff(b_score - a_score)\n      setwin(\"Team B\")\n    }\n\n    document.getElementById(\"inputB\").value=\"\"\n    document.getElementById(\"inputA\").value=\"\"\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Row className=\"heading\">\n        <Col align=\"center\"><h1 className=\"heading\">Team A</h1></Col>\n        <Col align=\"center\"><h1 className=\"heading\">Team B</h1></Col>\n      </Row><div className=\"restapp\">\n      <Row><br></br></Row>\n      <Row>\n        <Col><div class=\"ui input\"><input type=\"number\" placeholder=\"Round Score\" id=\"inputA\"/></div></Col>\n        <Col><div class=\"ui input\"><input type=\"number\" placeholder=\"Round Score\" id=\"inputB\"/></div></Col>\n      </Row>\n      <Row><br></br></Row>\n      <Row>\n      <Button variant=\"secondary\" size=\"lg\" onClick={add}>Add Round Result</Button>\n      </Row>\n      <Row>\n        <Col align=\"center\">\n                      <ol>\n              {myArray.map((item,index) => \n                  <li key={index}>{item}</li>\n              )}\n              </ol>\n        </Col>\n        <Col align=\"center\">\n                        <ol>\n                {myArray2.map((item,index) => \n                    <li key={index}>{item}</li>\n                )}\n                </ol>\n        </Col>\n      </Row>\n      <Row>\n      <Alert variant=\"secondary\"><b>{win}</b> is winning by <b>{diff}</b></Alert>\n      </Row>\n    </div></div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}